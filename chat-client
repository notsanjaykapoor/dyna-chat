#!/usr/bin/env ruby

require "async"
require "async/http/endpoint"
require "async/websocket/client"

require "optparse"

require "./boot"

options = {
  message: nil,
  url: "http://localhost:7070",
}

parser = OptionParser.new do |opts|
  opts.on('--message name', "message name") do |s|
    options[:message] = s
  end

  opts.on('-h', '--help', 'help') do
    puts opts.to_s
    exit
  end
end

parser.parse!

if options[:message].nil?
  parser.parse!(['cmd', '-h'])
end


Async do |task|
  endpoint = Async::HTTP::Endpoint.parse(options[:url])

  Async::WebSocket::Client.connect(endpoint) do |connection|
    if options[:message][/ping/]
      message = {
        "jsonrpc" => "2.0",
        "method" => options[:message],
        "id" => ULID.generate,
      }
    elsif options[:message][/subscribe/]
      message = {
        message: options[:message],
        topic: "docs",
        user_id: User.select_map(:user_id).sample,
      }
    elsif options[:message][/hello/]
      message = {
        message: options[:message],
        user_id: ULID.generate,
      }
    end

    Console.logger.info(self, "sending #{message}")

    connection.write(message.to_json)
    connection.flush

    # while message = connection.read
    #   Console.logger.info(self, "received #{message}")
    #
    #   break
    # end
  end
end
